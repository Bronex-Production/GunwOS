//
//  gunwtest
//  GunwOS Tests
//
//  Created by Artur Danielewski on 18.07.2022.
//

#ifndef LIBGUNW_TEST
#define LIBGUNW_TEST

#include <memory>
#include <vector>

class Scenario {

    public:
        virtual void run(void) = 0;
        virtual ~Scenario() {}
};

class Runner {
    
    public:
        static Runner& Shared();

        template <class S> void Register(void) {
            scenarioRegistry.push_back(std::move(std::make_unique<S>()));
        }
        
        void Run(void);

    private:
        std::vector< std::unique_ptr<Scenario> > scenarioRegistry = std::vector< std::unique_ptr<Scenario> >();
};

#define SCENARIO(NAME, RUN) class Scenario_ ## NAME : public Scenario {     \
    public:                                                                 \
        void run(void) {RUN;}                                               \
};                                                                          \
static void NAME ## _registration(void) __attribute__((constructor));       \
static void NAME ## _registration(void) {                                   \
    Runner::Shared().Register< Scenario_ ## NAME >();                         \
}

#endif // LIBGUNW_TEST